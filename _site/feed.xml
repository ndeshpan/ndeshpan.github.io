<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Wanderlust</title>
    <description>Join my adventures around the world. 
</description>
    <link>http://yourdomain.com/</link>
    <atom:link href="http://yourdomain.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Wed, 29 Jul 2015 10:36:10 -0400</pubDate>
    <lastBuildDate>Wed, 29 Jul 2015 10:36:10 -0400</lastBuildDate>
    <generator>Jekyll v2.5.3</generator>
    
      <item>
        <title>Color Spaces</title>
        <description>&lt;head&gt;
	&lt;link href=&quot;/css/2015-07-29-color-spaces.css&quot; type=&quot;text/css&quot; rel=&quot;stylesheet&quot; /&gt;
&lt;/head&gt;

&lt;p&gt;If you have ever painted your house and been forced to sift through a harrowing supply of thick, wieldy color decks, you understand how difficult it is to choose cohesive colors.&lt;/p&gt;

&lt;p&gt;Color shapes our first impressions of an environment, and can either attract or violently repel our brain.&lt;/p&gt;

&lt;p&gt;Hospitals paint their nurseries with bright, jubilant hues like yellow or pastel blue to embody vitality. Scary films heavily rely on darker sets and costuming to portray a dingy, derelict atmosphere. Though we aren’t always conscious of the effects of properly picked colors, the right color scheme can transform a product and increase viewer engagement.&lt;/p&gt;

&lt;p&gt;When creating technological applications, creating a solid UI with vibrant, attractive colors is extremely important. Color spaces and color theory go a long way for web design!&lt;/p&gt;

&lt;p&gt;On illuminated screens or surfaces like a computer monitor, color is constructed according to the additive primary model. This means that any combination of red, green, and blue produce the wondrous span of colors we can see on a screen, ranging from raging scarlet to champagne and everything in between.&lt;/p&gt;

&lt;p&gt;This RGB model is very similar to the HSL, or HSV model, which stands for hue, saturation, and lumninosity/value. Hue is pure color, saturation is how dull/bright something is, and value/lumninosity is how light/dark something is. By adjusting these three values, you can also produce any color. While the RBG model is based on a color space graph, the HSL/HSV model is based on a cylindrical shape and thus easier to view.&lt;/p&gt;

&lt;p&gt;For computer graphics, we rely on the RGB model when selecting color. So how do you know which colors to choose when creating a schema? There are a few general principles that help you pick appealing colors. When creating color schemes, follow the monochromatic, analogous, complementary, triad, or tetrad relationships to establish a beautiful palette. These principles help you choose tandem colors that support and powerfully contrast each other to make a rich graphic. These principles are centered around the basic color wheel, and–in a nutshell–help you choose colors that are either far apart from each other, or close to each other. Choosing colors that are as far apart as possible can create beautiful contrast, while selecting derivative, adjacdent colors creates unity.&lt;/p&gt;

&lt;p&gt;In addition to following on of the above color schemes, keep these two principles in mind:
1. Regardless of which color scheme you choose, select one bright, dominant color, and have others be slightly muted in comparison. This helps avoid unnecessary tension and vibration in your scheme. 
2. Keep shadowns neutral when using bright colors. Stick with grey, black, or white so that your creation looks more balanced.&lt;/p&gt;

&lt;p&gt;For this website, I plan on using a triad color scheme. This means that the three colors I select will be equally spaced around the color wheel so that my chosen hues are balanced and calming. I plan on using a &lt;span class=&quot;violet&quot;&gt;violet&lt;/span&gt; - &lt;span class=&quot;orange&quot;&gt;orange&lt;/span&gt; - &lt;span class=&quot;green&quot;&gt;green&lt;/span&gt; theme to harmoniously unify different pages on my site, and add a bit of pop. I’ll be updating the website soon with these colors, so keep an eye out!&lt;/p&gt;

</description>
        <pubDate>Wed, 29 Jul 2015 06:10:00 -0400</pubDate>
        <link>http://yourdomain.com/jekyll/update/2015/07/29/color-spaces.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2015/07/29/color-spaces.html</guid>
        
        <category>-color</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>What Is An API?</title>
        <description>&lt;p&gt;Simply put, an API is basically a link. It allows you to leverage the data/resources of some software for personal use. The API acts like a messenger, tells the system what you want to do, and returns the response back to you. The API’s role is comparable to a waiter acting as a messenger between you and the kitchen.&lt;/p&gt;

&lt;p&gt;On a typical airline website, you enter your anticipated arrival and departure dates &amp;amp; locations. In essence, by specifying certain variables, you interact with the airline site’s database to see if anything meets your requirements. Let’s say you decide to book your travel tickets using Expedia instead of the stock British Airways site. How does Expedia access British Airways’ database to provide you with information on whether flights match your travel dates? Expedia doesn’t have direct access to this database….Ah-ha! This is where the API comes into play. Expedia will interact with British Airways’ API to provide you real-time information on BA flights by accessing the airline’s database; you request certain variables, it queries the database, and then returns the information to you on Expedia.&lt;/p&gt;

&lt;p&gt;API’s drive connectivity! How cool is that?!&lt;/p&gt;

&lt;h2&gt; REST API &lt;/h2&gt;
&lt;p&gt;Let’s begin with the foundation: REST stands for &lt;strong&gt;RE&lt;/strong&gt;presentational &lt;strong&gt;S&lt;/strong&gt;tate &lt;strong&gt;T&lt;/strong&gt;ransfer, and API stands for Application Programming Interface. Usually, a REST API works the same way a website does; a call is made from the client to the server, and you get data back through the HTTP protocol.&lt;/p&gt;

&lt;p&gt;(completely irrelevant tidbit: JSON stands for javascript objet notation, organized according to key value pairs–who knew? Haha I didn’t.)&lt;/p&gt;

&lt;p&gt;This research is leading me to research HTTP request methods…so slight tangent.&lt;/p&gt;

&lt;h2&gt; HTTP Request Methods &amp;amp; API&#39;s&lt;/h2&gt;
&lt;p&gt;There are two main request methods:&lt;/p&gt;
&lt;ul&gt;
	&lt;li&gt;GET: use to consume data, and get data back (...perhaps from an API)&lt;/li&gt;
	&lt;li&gt;POST: use to write data to an API, put the data in the body of an HTTP request &lt;/li&gt;

&lt;/ul&gt;

</description>
        <pubDate>Sat, 25 Jul 2015 06:00:00 -0400</pubDate>
        <link>http://yourdomain.com/jekyll/update/2015/07/25/what-is-an-api.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2015/07/25/what-is-an-api.html</guid>
        
        <category>-api</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Palm Beach</title>
        <description>&lt;p&gt;Although we initially planned to solely visit Palm Beach for the entirety of our trip, the beckoning signs towards Miami immediately caught our attention, and before we knew it we had planned a spontaneous one-hour trip to the southern city! It was about a one-hour drive along I-95 south–once we approached the city, we were rewarded with beautiful views of the city’s bays and harbors. Miami is really interesting because it is split up by various water bodies! As a result, skyscraper buildings along the coastline get beautiful views of the cerulean-colored bays and the city’s robust maritime life.&lt;/p&gt;

</description>
        <pubDate>Thu, 09 Jul 2015 06:00:00 -0400</pubDate>
        <link>http://yourdomain.com/jekyll/update/2015/07/09/palm-beach.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2015/07/09/palm-beach.html</guid>
        
        <category>-florida</category>
        
        <category>-pbcatch</category>
        
        <category>-family</category>
        
        <category>-miami</category>
        
        <category>-america</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Fourth</title>
        <description>&lt;p&gt;Typically, my family does not go all-out for the fourth of July weekend. However, something changed and this year we have planned a trip to Florida! Details will be posted soon (along with pictures!) so stay tuned.&lt;/p&gt;
</description>
        <pubDate>Wed, 01 Jul 2015 06:00:00 -0400</pubDate>
        <link>http://yourdomain.com/jekyll/update/2015/07/01/fourth.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2015/07/01/fourth.html</guid>
        
        <category>-redwhiteblue</category>
        
        <category>-america</category>
        
        <category>-longweekend</category>
        
        <category>-fun</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll</title>
        <description>&lt;p&gt;To add new posts, simply add a file in the &lt;code&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;Tom&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints &amp;#39;Hi, Tom&amp;#39; to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://github.com/jekyll/jekyll-help&quot;&gt;Jekyll’s dedicated Help repository&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Mon, 29 Jun 2015 10:52:46 -0400</pubDate>
        <link>http://yourdomain.com/jekyll/update/2015/06/29/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://yourdomain.com/jekyll/update/2015/06/29/welcome-to-jekyll.html</guid>
        
        <category>-info</category>
        
        <category>-america</category>
        
        <category>-beginning</category>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
  </channel>
</rss>
